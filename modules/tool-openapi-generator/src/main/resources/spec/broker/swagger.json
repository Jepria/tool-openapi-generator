{
    "openapi": "3.0.0",
    "info": {
      "description": "Thats BrokerAuto project whose actual technical documentation can be downloaded here.",
      "version": "1.0.0",
      "title": "List of BrokerAuto REST API services"
    },
    "tags": [
      {
        "name": "broker",
        "description": "RESTful API to interact with application."
      },
      {
        "name": "dictionary",
        "description": "List of services with related broker dictionaries."
      }
    ],
    "paths": {
      "/broker/application": {
        "post": {
          "tags": [
            "broker"
          ],
          "summary": "Create application",
          "description": "Create application with all parameters.",
          "operationId": "application",
          "parameters": [
            {
              "$ref": "#/components/parameters/login"
            },
            {
              "$ref": "#/components/parameters/originCode"
            }
          ],
          "requestBody": {
            "content": {
              "application/json;charset/utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/BrokerApplicationDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "successful operation"
            }
          }
        }
      },
      "/broker/application/{id}/status": {
        "get": {
          "tags": [
            "broker"
          ],
          "summary": "Get application status",
          "description": "Get status for application.",
          "operationId": "status",
          "parameters": [
            {
              "$ref": "#/components/parameters/id"
            },
            {
              "$ref": "#/components/parameters/login"
            },
            {
              "$ref": "#/components/parameters/originCode"
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "headers": {},
              "content": {
                "application/json;charset/utf-8": {
                  "schema": {
                    "$ref": "#/components/schemas/ApplicationResultDto"
                  }
                }
              }
            }
          }
        }
      },
      "/broker/application/{id}/additionalInfo": {
        "post": {
          "tags": [
            "broker"
          ],
          "summary": "Create additional information",
          "description": "Create additional information for application.",
          "operationId": "createAdditionalInfo",
          "parameters": [
            {
              "$ref": "#/components/parameters/id"
            },
            {
              "$ref": "#/components/parameters/login"
            },
            {
              "$ref": "#/components/parameters/originCode"
            }
          ],
          "requestBody": {
            "content": {
              "application/json;charset/utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationInfoDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "successful operation"
            }
          }
        }
      },
      "/broker/exportedApplicationReport": {
        "get": {
          "tags": [
            "broker"
          ],
          "summary": "Get exported application report",
          "description": "Get exported report for application.",
          "operationId": "exportedApplicationReport",
          "parameters": [
            {
              "$ref": "#/components/parameters/login"
            },
            {
              "$ref": "#/components/parameters/originCode"
            },
            {
              "name": "reportDate",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/broker/application/check": {
        "get": {
          "tags": [
            "broker"
          ],
          "summary": "Check existing application",
          "description": "",
          "operationId": "checkExistingApplication",
          "parameters": [
            {
              "$ref": "#/components/parameters/login"
            },
            {
              "$ref": "#/components/parameters/originCode"
            },
            {
              "name": "firstName",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "patronymic",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "surname",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "birthday",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "headers": {},
              "content": {
                "application/json;charset/utf-8": {
                  "schema": {
                    "$ref": "#/components/schemas/ExistingApplicationResultDto"
                  }
                }
              }
            }
          }
        }
      },
      "/broker/hook": {
        "post": {
          "tags": [
            "broker"
          ],
          "summary": "Hook",
          "description": "Check working of service.",
          "operationId": "ping",
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/dictionary/service": {
        "get": {
          "tags": [
            "dictionary"
          ],
          "summary": "Load additional services",
          "description": "Get all additional services.",
          "operationId": "service",
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/dictionary/insuranceCompany": {
        "get": {
          "tags": [
            "dictionary"
          ],
          "summary": "Insurance company",
          "description": "Get insurance company for specified company and city.",
          "operationId": "getInsuranceCompany",
          "parameters": [
            {
              "name": "insuranceCompanyId",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "cityId",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/dictionary/insuranceProduct": {
        "get": {
          "tags": [
            "dictionary"
          ],
          "summary": "Insurance product",
          "description": "Get insurance product for specified product, company and insurance\u0027s product type.",
          "operationId": "getInsuranceProduct",
          "parameters": [
            {
              "name": "insuranceProductId",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "insuranceCompanyId",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "insuranceProductTypeId",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/dictionary/loanProductInsuranceType": {
        "get": {
          "tags": [
            "dictionary"
          ],
          "summary": "Loan product insurance type",
          "description": "Get loan product insurance type for specified product type.",
          "operationId": "getLoanProductInsuranceType",
          "parameters": [
            {
              "name": "autoGtypeId",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/dictionary/vehiclePassportType": {
        "get": {
          "tags": [
            "dictionary"
          ],
          "summary": "Vehicle passport types",
          "description": "Get all vehicle passport types for specified brand.",
          "operationId": "vehiclePassportType",
          "parameters": [
            {
              "name": "vehiclePassportTypeId",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/dictionary/dump": {
        "get": {
          "tags": [
            "dictionary"
          ],
          "summary": "Get zip dictionaries",
          "description": "Get dictionaries in zip-file.",
          "operationId": "getProductInsuranceType",
          "parameters": [
            {
              "name": "originCode",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/dictionary/environmentalClass": {
        "get": {
          "tags": [
            "dictionary"
          ],
          "summary": "Environmental classes",
          "description": "Get all environmental classes for specified brand.",
          "operationId": "environmentalClass",
          "parameters": [
            {
              "name": "environmentalClassId",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/dictionary/loanProduct": {
        "get": {
          "tags": [
            "dictionary"
          ],
          "summary": "Load loan products",
          "description": "Get all loan prooducts for specified brand.",
          "operationId": "loanProduct",
          "parameters": [
            {
              "name": "brandId",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/dictionary/incomeProof": {
        "get": {
          "tags": [
            "dictionary"
          ],
          "summary": "Get income proof documents",
          "description": "Get all income proof documents.",
          "operationId": "incomeProof",
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/dictionary/insuranceType": {
        "get": {
          "tags": [
            "dictionary"
          ],
          "summary": "Insurance types",
          "description": "Get all insurance types for specified brand.",
          "operationId": "insuranceType",
          "parameters": [
            {
              "name": "insuranceTypeId",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/dictionary/insurance": {
        "get": {
          "tags": [
            "dictionary"
          ],
          "summary": "Insurance",
          "description": "Get info about insurance for specified insurance, product and insurance\u0027s type.",
          "operationId": "getInsurance",
          "parameters": [
            {
              "name": "insuranceId",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "insuranceProductId",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "insuranceTypeId",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/dictionary/engineType": {
        "get": {
          "tags": [
            "dictionary"
          ],
          "summary": "Engine types",
          "description": "Get all engine types for specified brand.",
          "operationId": "engineType",
          "parameters": [
            {
              "name": "engineTypeId",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/dictionary/region": {
        "get": {
          "tags": [
            "dictionary"
          ],
          "summary": "Region options",
          "description": "Get list of regions.",
          "operationId": "getRegion",
          "parameters": [
            {
              "name": "regionName",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "regionCode",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/dictionary/house": {
        "get": {
          "tags": [
            "dictionary"
          ],
          "summary": "House options",
          "description": "Get list of houses.",
          "operationId": "getHouse",
          "parameters": [
            {
              "name": "streetCode",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseCode",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseNumber",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "structureNumber",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "corpusNumber",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/dictionary/hook": {
        "post": {
          "tags": [
            "dictionary"
          ],
          "summary": "Hook",
          "description": "Check working of service.",
          "operationId": "ping_1",
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/dictionary/relationshipType": {
        "get": {
          "tags": [
            "dictionary"
          ],
          "summary": "Relationship type options",
          "description": "Get list of relationship types.",
          "operationId": "relationshipType",
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/dictionary/model": {
        "get": {
          "tags": [
            "dictionary"
          ],
          "summary": "Model options",
          "description": "Get list of models by brand id.",
          "operationId": "model",
          "parameters": [
            {
              "name": "brandId",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/dictionary/street": {
        "get": {
          "tags": [
            "dictionary"
          ],
          "summary": "Street options",
          "description": "Get list of streets.",
          "operationId": "getStreet",
          "parameters": [
            {
              "name": "cityCode",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "townshipCode",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "streetName",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "streetCode",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/dictionary/term": {
        "get": {
          "tags": [
            "dictionary"
          ],
          "summary": "Credit term options",
          "description": "Get list of credit terms.",
          "operationId": "term",
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json;charset/utf-8": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/PropertyDto"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/dictionary/township": {
        "get": {
          "tags": [
            "dictionary"
          ],
          "summary": "Township options",
          "description": "Get list of townships.",
          "operationId": "getTownship",
          "parameters": [
            {
              "name": "regionCode",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "districtCode",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "cityCode",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "townshipName",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "townshipCode",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/dictionary/brand": {
        "get": {
          "tags": [
            "dictionary"
          ],
          "summary": "Brand options",
          "description": "Get list of brands.",
          "operationId": "brand",
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/dictionary/socialStatus": {
        "get": {
          "tags": [
            "dictionary"
          ],
          "summary": "Social status options",
          "description": "Get list of social statuses.",
          "operationId": "socialStatus",
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/dictionary/education": {
        "get": {
          "tags": [
            "dictionary"
          ],
          "summary": "Education options",
          "description": "Get list of eduction types.",
          "operationId": "education",
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/dictionary/positionType": {
        "get": {
          "tags": [
            "dictionary"
          ],
          "summary": "Position type options",
          "description": "Get list of position types.",
          "operationId": "positionType",
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/dictionary/city": {
        "get": {
          "tags": [
            "dictionary"
          ],
          "summary": "City options",
          "description": "Get list of cities.",
          "operationId": "getCity",
          "parameters": [
            {
              "name": "regionCode",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "districtCode",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "cityName",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "cityCode",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/dictionary/phoneType": {
        "get": {
          "tags": [
            "dictionary"
          ],
          "summary": "Phone type options",
          "description": "Get list of phone types.",
          "operationId": "phoneType",
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/dictionary/businessType": {
        "get": {
          "tags": [
            "dictionary"
          ],
          "summary": "Business type options",
          "description": "Get list of business types.",
          "operationId": "businessType",
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/dictionary/district": {
        "get": {
          "tags": [
            "dictionary"
          ],
          "summary": "District options",
          "description": "Get list of districts.",
          "operationId": "getDistrict",
          "parameters": [
            {
              "name": "regionCode",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "districtName",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "districtCode",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/dictionary/sex": {
        "get": {
          "tags": [
            "dictionary"
          ],
          "summary": "Sex options",
          "description": "Get list of sex.",
          "operationId": "sex",
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/dictionary/marriageStatus": {
        "get": {
          "tags": [
            "dictionary"
          ],
          "summary": "Marriage status options",
          "description": "Get list of marriage statuses.",
          "operationId": "marriageStatus",
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/dictionary/acquisitionMethod": {
        "get": {
          "tags": [
            "dictionary"
          ],
          "summary": "Acquisition method options",
          "description": "Get list of acquisition methods by acquisition method id.",
          "operationId": "getAcquisitionMethod",
          "parameters": [
            {
              "name": "acquisitionMethodId",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/dictionary/secondDocumentType": {
        "get": {
          "tags": [
            "dictionary"
          ],
          "summary": "Second document type options",
          "description": "Get list of second document types.",
          "operationId": "secondDocumentType",
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/dictionary/propertyAddressType": {
        "get": {
          "tags": [
            "dictionary"
          ],
          "summary": "Property address type options",
          "description": "Get list of property address types by property address type id.",
          "operationId": "getPropertyAddressType",
          "parameters": [
            {
              "name": "propertyAddressTypeId",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/dictionary/residencePlaceType": {
        "get": {
          "tags": [
            "dictionary"
          ],
          "summary": "Residence place type options",
          "description": "Get list of place types.",
          "operationId": "residencePlaceType",
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/dictionary/houseDetails": {
        "get": {
          "tags": [
            "dictionary"
          ],
          "summary": "House details option",
          "description": "Get info about particular house.",
          "operationId": "getHouseDetails",
          "parameters": [
            {
              "name": "houseCode",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/dictionary/propertyType": {
        "get": {
          "tags": [
            "dictionary"
          ],
          "summary": "Property type options",
          "description": "Get list of property types by property type id.",
          "operationId": "getPropertyType",
          "parameters": [
            {
              "name": "propertyTypeId",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      }
    },
    "components": {
      "parameters": {
        "login": {
          "name": "login",
          "in": "query",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "Логин консультанта в Скоринге, от имени которого создаётся заявка"
        },
        "originCode": {
          "name": "originCode",
          "in": "query",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "Идентификатор источника. Настраиваемое значение общее для всех запросов"
        },
        "id": {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int32"
          },
          "description": "Идентификатор заявки"
        }
      },
      "schemas": {
        "AddInsuranceDto": {
          "type": "object",
          "required": [
            "cascoPolicyType",
            "insuranceId",
            "insurancePayType",
            "insurancePeriod",
            "insurancePremium",
            "insuranceSum",
            "polisBegin",
            "polisNumber",
            "polisSeries"
          ],
          "properties": {
            "insuranceId": {
              "type": "integer",
              "format": "int32"
            },
            "insurancePeriod": {
              "type": "integer",
              "format": "int32"
            },
            "polisSeries": {
              "type": "string"
            },
            "polisNumber": {
              "type": "string"
            },
            "polisBegin": {
              "type": "string"
            },
            "insurancePayType": {
              "type": "integer",
              "format": "int32"
            },
            "insuranceSum": {
              "type": "string"
            },
            "insurancePremium": {
              "type": "string"
            },
            "cascoPolicyType": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "AddServiceDto": {
          "type": "object",
          "required": [
            "ndsFlag",
            "price",
            "serviceId",
            "traderCode"
          ],
          "properties": {
            "serviceId": {
              "type": "integer",
              "format": "int32"
            },
            "traderCode": {
              "type": "integer",
              "format": "int32"
            },
            "price": {
              "type": "string"
            },
            "ndsFlag": {
              "type": "boolean"
            }
          }
        },
        "BrokerApplicationDto": {
          "type": "object",
          "properties": {
            "surname": {
              "type": "string"
            },
            "firstname": {
              "type": "string"
            },
            "patronymic": {
              "type": "string"
            },
            "surnameChanging": {
              "type": "boolean"
            },
            "formerSurname": {
              "type": "string"
            },
            "sexId": {
              "type": "integer",
              "format": "int32"
            },
            "sexName": {
              "type": "string"
            },
            "birthday": {
              "type": "string"
            },
            "isCitizenshipUsa": {
              "type": "boolean"
            },
            "passportSeries": {
              "type": "string"
            },
            "passportNumber": {
              "type": "string"
            },
            "passportDepartmentIssuer": {
              "type": "string"
            },
            "passportCodeDivision": {
              "type": "string"
            },
            "passportIssueDate": {
              "type": "string"
            },
            "passportBirthPlace": {
              "type": "string"
            },
            "registrationPostIndex": {
              "type": "string"
            },
            "registrationRegionCode": {
              "type": "string"
            },
            "registrationRegionName": {
              "type": "string"
            },
            "registrationDistrictCode": {
              "type": "string"
            },
            "registrationDistrictName": {
              "type": "string"
            },
            "registrationCityCode": {
              "type": "string"
            },
            "registrationCityName": {
              "type": "string"
            },
            "registrationSettlementCode": {
              "type": "string"
            },
            "registrationSettlementName": {
              "type": "string"
            },
            "registrationStreetCode": {
              "type": "string"
            },
            "registrationStreetName": {
              "type": "string"
            },
            "registrationOtherStreetName": {
              "type": "string"
            },
            "registrationHouseCode": {
              "type": "string"
            },
            "registrationHouseNumber": {
              "type": "string"
            },
            "registrationBuilding": {
              "type": "string"
            },
            "registrationBlock": {
              "type": "string"
            },
            "registrationApartmentNumber": {
              "type": "string"
            },
            "registrationAddress": {
              "type": "string"
            },
            "registrationDate": {
              "type": "string",
              "pattern": "(^$|(([0-2][0-9]|3[0-1])\\.(0[1-9]|1[0-2])\\.[0-9]{4}))"
            },
            "regPlaceSameActualPlace": {
              "type": "boolean"
            },
            "actualPostIndex": {
              "type": "string"
            },
            "actualRegionCode": {
              "type": "string"
            },
            "actualRegionName": {
              "type": "string"
            },
            "actualDistrictCode": {
              "type": "string"
            },
            "actualDistrictName": {
              "type": "string"
            },
            "actualCityCode": {
              "type": "string"
            },
            "actualCityName": {
              "type": "string"
            },
            "actualSettlementCode": {
              "type": "string"
            },
            "actualSettlementName": {
              "type": "string"
            },
            "actualStreetCode": {
              "type": "string"
            },
            "actualStreetName": {
              "type": "string"
            },
            "actualOtherStreetName": {
              "type": "string"
            },
            "actualHouseCode": {
              "type": "string"
            },
            "actualHouseNumber": {
              "type": "string"
            },
            "actualBuilding": {
              "type": "string"
            },
            "actualBlock": {
              "type": "string"
            },
            "actualApartmentNumber": {
              "type": "string"
            },
            "actualAddress": {
              "type": "string"
            },
            "residencePlaceTypeId": {
              "type": "integer",
              "format": "int32"
            },
            "residencePlaceTypeName": {
              "type": "string"
            },
            "socialStatusId": {
              "type": "integer",
              "format": "int32"
            },
            "socialStatusName": {
              "type": "string"
            },
            "educationId": {
              "type": "integer",
              "format": "int32"
            },
            "educationName": {
              "type": "string"
            },
            "jobLegalName": {
              "type": "string"
            },
            "employerTaxPayerNumber": {
              "type": "string"
            },
            "workplaceRegionCode": {
              "type": "string"
            },
            "workplaceRegionName": {
              "type": "string"
            },
            "workplaceDistrictCode": {
              "type": "string"
            },
            "workplaceDistrictName": {
              "type": "string"
            },
            "workplaceCityCode": {
              "type": "string"
            },
            "workplaceCityName": {
              "type": "string"
            },
            "workplaceSettlementCode": {
              "type": "string"
            },
            "workplaceSettlementName": {
              "type": "string"
            },
            "workplaceStreetCode": {
              "type": "string"
            },
            "workplaceStreetName": {
              "type": "string"
            },
            "workplaceHouseCode": {
              "type": "string"
            },
            "workplaceHouseNumber": {
              "type": "string"
            },
            "workplaceBuilding": {
              "type": "string"
            },
            "workplaceBlock": {
              "type": "string"
            },
            "workplaceApartmentNumber": {
              "type": "string"
            },
            "workplaceAddress": {
              "type": "string"
            },
            "businessTypeId": {
              "type": "integer",
              "format": "int32"
            },
            "businessTypeName": {
              "type": "string"
            },
            "positionTypeId": {
              "type": "integer",
              "format": "int32"
            },
            "positionTypeName": {
              "type": "string"
            },
            "activityDurationId": {
              "type": "integer",
              "format": "int32"
            },
            "isShiftWork": {
              "type": "boolean"
            },
            "isRelationGovServices": {
              "type": "boolean"
            },
            "publicOfficialRelFlag": {
              "type": "boolean"
            },
            "publicOfficialRelTypeId": {
              "type": "integer",
              "format": "int32"
            },
            "publicOfficialRelTypeName": {
              "type": "string"
            },
            "officialRelationPosition": {
              "type": "string"
            },
            "mainMonthlyIncome": {
              "type": "string"
            },
            "additionalMonthlyIncome": {
              "type": "string"
            },
            "monthlyAmmountRepayLoan": {
              "type": "string"
            },
            "mandatoryMonthlyPayments": {
              "type": "string"
            },
            "repaymentLoanAnotherBank": {
              "type": "string"
            },
            "repaymentLoanMortgage": {
              "type": "string"
            },
            "secondDocumentTypeId": {
              "type": "integer",
              "format": "int32"
            },
            "secondDocumentTypeName": {
              "type": "string"
            },
            "driverLicenseSeries": {
              "type": "string"
            },
            "driverLicenseNumber": {
              "type": "string"
            },
            "driverLicenseIssueDate": {
              "type": "string",
              "pattern": "(^$|(([0-2][0-9]|3[0-1])\\.(0[1-9]|1[0-2])\\.[0-9]{4}))"
            },
            "beginDrivingExperience": {
              "type": "string"
            },
            "travelPassportSeries": {
              "type": "string"
            },
            "travelPassportNumber": {
              "type": "string"
            },
            "taxPayerCertificateSeries": {
              "type": "string"
            },
            "taxPayerCertificateNumber": {
              "type": "string"
            },
            "taxPayerNumber": {
              "type": "string"
            },
            "pensionFundCertificateNumber": {
              "type": "string"
            },
            "militaryCardSeries": {
              "type": "string"
            },
            "militaryCardNumber": {
              "type": "string"
            },
            "marriageStatusId": {
              "type": "integer",
              "format": "int32"
            },
            "marriageStatusName": {
              "type": "string"
            },
            "underageChildrenCount": {
              "type": "integer",
              "format": "int32"
            },
            "dependantsNumber": {
              "type": "integer",
              "format": "int32"
            },
            "marriageAge": {
              "type": "integer",
              "format": "int32"
            },
            "spouseSurname": {
              "type": "string"
            },
            "spouseFirstname": {
              "type": "string"
            },
            "spousePatronymic": {
              "type": "string"
            },
            "spouseSurnameChanging": {
              "type": "boolean"
            },
            "spouseFormerSurname": {
              "type": "string"
            },
            "spouseBirthday": {
              "type": "string"
            },
            "spouseSocialStatusId": {
              "type": "integer",
              "format": "int32"
            },
            "spouseSocialStatusName": {
              "type": "string"
            },
            "spouseMainMonthlyIncome": {
              "type": "string"
            },
            "spouseAdditionalMonthlyIncome": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "phoneTypeId": {
              "type": "integer",
              "format": "int32"
            },
            "phoneTypeName": {
              "type": "string"
            },
            "phoneNumber": {
              "type": "string",
              "pattern": "(^$|[0-9]{10})"
            },
            "phoneSecondTypeId": {
              "type": "integer",
              "format": "int32"
            },
            "phoneSecondTypeName": {
              "type": "string"
            },
            "phoneSecondNumber": {
              "type": "string",
              "pattern": "(^$|[0-9]{10})"
            },
            "phoneThirdTypeId": {
              "type": "integer",
              "format": "int32"
            },
            "phoneThirdTypeName": {
              "type": "string"
            },
            "phoneThirdNumber": {
              "type": "string",
              "pattern": "(^$|[0-9]{10})"
            },
            "phoneForthTypeId": {
              "type": "integer",
              "format": "int32"
            },
            "phoneForthTypeName": {
              "type": "string"
            },
            "phoneForthNumber": {
              "type": "string",
              "pattern": "(^$|[0-9]{10})"
            },
            "phoneFifthTypeId": {
              "type": "integer",
              "format": "int32"
            },
            "phoneFifthTypeName": {
              "type": "string"
            },
            "phoneFifthNumber": {
              "type": "string",
              "pattern": "(^$|[0-9]{10})"
            },
            "usedCarFlag": {
              "type": "boolean"
            },
            "brandId": {
              "type": "integer",
              "format": "int32"
            },
            "brandName": {
              "type": "string"
            },
            "modelId": {
              "type": "integer",
              "format": "int32"
            },
            "modelName": {
              "type": "string"
            },
            "manufactureYear": {
              "type": "integer",
              "format": "int32"
            },
            "price": {
              "type": "string"
            },
            "firstPayment": {
              "type": "string"
            },
            "loanTerm": {
              "type": "integer",
              "format": "int32"
            },
            "salesOutletCode": {
              "type": "string"
            },
            "balloonResidualCostPrc": {
              "type": "string"
            },
            "autoGtypesParamId": {
              "type": "integer",
              "format": "int32"
            },
            "mainIncomeProofId": {
              "type": "integer",
              "format": "int32"
            },
            "mainIncomeProofName": {
              "type": "string"
            },
            "mainIncomeConfirmed": {
              "type": "string"
            },
            "services": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AddServiceDto"
              }
            },
            "insurances": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AddInsuranceDto"
              }
            }
          },
          "xml": {
            "name": "application"
          }
        },
        "AddressDto": {
          "type": "object",
          "properties": {
            "postIndex": {
              "type": "string"
            },
            "regionCode": {
              "type": "string"
            },
            "regionName": {
              "type": "string"
            },
            "districtCode": {
              "type": "string"
            },
            "districtName": {
              "type": "string"
            },
            "cityCode": {
              "type": "string"
            },
            "cityName": {
              "type": "string"
            },
            "settlementCode": {
              "type": "string"
            },
            "settlementName": {
              "type": "string"
            },
            "streetCode": {
              "type": "string"
            },
            "streetName": {
              "type": "string"
            },
            "houseNumber": {
              "type": "string"
            },
            "building": {
              "type": "string"
            },
            "block": {
              "type": "string"
            },
            "apartmentNumber": {
              "type": "string"
            }
          },
          "xml": {
            "name": "address"
          }
        },
        "ApplicationInfoDto": {
          "type": "object",
          "properties": {
            "position": {
              "type": "string"
            },
            "additionalMonthlyIncomeDesc": {
              "type": "string"
            },
            "expendituresDescription": {
              "type": "string"
            },
            "properties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ClientPropertyDto"
              }
            },
            "cars": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CarsDto"
              }
            }
          }
        },
        "CarsDto": {
          "type": "object",
          "properties": {
            "brandId": {
              "type": "integer",
              "format": "int32"
            },
            "modelId": {
              "type": "integer",
              "format": "int32"
            },
            "manufactureYear": {
              "type": "integer",
              "format": "int32"
            },
            "brandNameOther": {
              "type": "string"
            },
            "modelNameOther": {
              "type": "string"
            }
          }
        },
        "ClientPropertyDto": {
          "type": "object",
          "properties": {
            "propertyTypeId": {
              "type": "integer",
              "format": "int32"
            },
            "propertyAddressTypeId": {
              "type": "integer",
              "format": "int32"
            },
            "acquisitionMethodId": {
              "type": "integer",
              "format": "int32"
            },
            "address": {
              "$ref": "#/components/schemas/AddressDto"
            }
          }
        },
        "PropertyDto": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string"
            }
          }
        },
        "ApplicationResultDto": {
          "type": "object",
          "properties": {
            "resultCode": {
              "type": "string"
            },
            "resultMessage": {
              "type": "string"
            }
          }
        },
        "ExistingApplicationResultDto": {
          "type": "object",
          "properties": {
            "createApplicationFlag": {
              "type": "integer",
              "format": "int32",
              "description": "Флаг возможности создания анкеты (1 – да, 0 - нет)"
            },
            "createApplicationMessage": {
              "type": "string",
              "description": "Результирующий текст сообщения по данной проверке"
            }
          }
        }
      }
    },
    "servers": [
      {
        "url": "/BrokerAutoApplication/api"
      }
    ]
  }